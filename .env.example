# Example environment configuration
# Copy this file to `.env` and fill in actual secrets
# For local development, authenticate with `gcloud auth application-default login`
# and ensure your application code fetches secrets programmatically from Google Secret Manager.

# === LLM & AI PROVIDERS ===
OPENAI_API_KEY=
OPENAI_SERVICE_ACCOUNT_KEY=
CLAUDE_API_KEY=
GEMINI_API_KEY=
IDX_SECRET_MANAGER_KEY=
FIREBASE_BROWSER_API_KEY=
DEEPSEEK_API_KEY=
OPENROUTER_API_KEY=
LANGCHAIN_API_KEY=

# === GOOGLE CLOUD & FIREBASE CONFIGS ===
GCP_PROJECT_ID=isa-firebase-5cf2f # Your Google Cloud Project ID
GCP_REGION=europe-west4 # Your Google Cloud Region
GCP_SERVICE_ACCOUNT_KEY_JSON= # Path to your service account key file (for local dev if needed, otherwise use WIF)
GOOGLE_CLIENT_ID= # Your Google Client ID
GOOGLE_CSE_ID= # Your Google Custom Search Engine ID
FIREBASE_PROJECT_ID=isa-firebase-5cf2f # Your Firebase Project ID
FIREBASE_API_KEY= # Your Firebase API Key

# === WEBHOOKS / CI / REPO ===
JIRA_WEBHOOK_SECRET= # Your Jira Webhook Secret
GITHUB_PAT= # GitHub Personal Access Token (should be managed as a GitHub Secret, not in .env)

# === DEV EMULATORS ===
FIREBASE_AUTH_EMULATOR_HOST=localhost:9099
FIRESTORE_EMULATOR_HOST=localhost:8080
FUNCTIONS_EMULATOR_HOST=localhost:5001

# === DATABASE CREDENTIALS ===
PG_HOST=localhost
PG_PORT=5432
PG_USER=<db_user>
PG_PASSWORD= # Your PostgreSQL password
PG_DATABASE=<db_name>

# === SUPABASE ===
SUPABASE_URL=https://sapvrzpjmsitbsqdyebz.supabase.co # Your Supabase URL
SUPABASE_API_KEY= # Your Supabase API Key

# === OPTIONAL / EXTRA ===
SENTRY_DSN= # Your Sentry DSN (e.g., https://examplePublicKey@o0.ingest.sentry.io/0)
ENABLE_EXPERIMENTAL_FEATURES= # Set to 'true' or 'false'

# === DOMAINS / REDIRECT URIS ===
ALLOWED_DOMAINS=localhost,isa-firebase-5cf2f.firebaseapp.com
REDIRECT_URIS=http://localhost:3000/api/auth/callback,https://isa-firebase-5cf2f.firebaseapp.com/__/auth/handler

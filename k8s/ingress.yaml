apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: isa-superapp
  namespace: isa-superapp
  labels:
    app.kubernetes.io/name: isa-superapp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/client-body-timeout: "30"
    nginx.ingress.kubernetes.io/client-header-timeout: "30"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
spec:
  tls:
  - hosts:
    - isa-superapp.example.com
    secretName: isa-superapp-tls
  rules:
  - host: isa-superapp.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: isa-superapp
            port:
              number: 80
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: isa-superapp
            port:
              number: 8080
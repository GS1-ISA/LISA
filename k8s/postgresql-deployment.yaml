apiVersion: apps/v1
kind: Deployment
metadata:
  name: isa-postgresql
  namespace: isa-database
  labels:
    app.kubernetes.io/name: isa-postgresql
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: database
    app.kubernetes.io/version: "15"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: isa-postgresql
      app.kubernetes.io/instance: production
  template:
    metadata:
      labels:
        app.kubernetes.io/name: isa-postgresql
        app.kubernetes.io/instance: production
        app.kubernetes.io/component: database
        app.kubernetes.io/version: "15"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: postgresql
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - name: postgresql
          containerPort: 5432
          protocol: TCP
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: isa-database-secrets
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: isa-database-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: isa-database-secrets
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U $(POSTGRES_USER) -d $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U $(POSTGRES_USER) -d $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 999
          runAsGroup: 999
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        - name: postgresql-run
          mountPath: /var/run/postgresql
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: isa-postgresql-pvc
      - name: postgresql-run
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: isa-postgresql
  namespace: isa-database
  labels:
    app.kubernetes.io/name: isa-postgresql
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
    protocol: TCP
  selector:
    app.kubernetes.io/name: isa-postgresql
    app.kubernetes.io/instance: production
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: isa-postgresql-pvc
  namespace: isa-database
  labels:
    app.kubernetes.io/name: isa-postgresql
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: database
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: gp3
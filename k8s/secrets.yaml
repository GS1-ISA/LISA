apiVersion: v1
kind: Secret
metadata:
  name: isa-superapp-secrets
  namespace: isa-superapp
  labels:
    app.kubernetes.io/name: isa-superapp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database Configuration (to be replaced with actual values from secret manager)
  DB_HOST: "CHANGE_ME"
  DB_PORT: "5432"
  DB_NAME: "isa_superapp"
  DB_USERNAME: "isa_superapp"
  DB_PASSWORD: "CHANGE_ME"
  
  # Redis Configuration (to be replaced with actual values from secret manager)
  REDIS_HOST: "redis-master.isa-superapp.svc.cluster.local"
  REDIS_PORT: "6379"
  REDIS_PASSWORD: "CHANGE_ME"
  REDIS_DB: "0"
  
  # JWT Configuration (to be replaced with actual values from secret manager)
  JWT_SECRET_KEY: "CHANGE_ME"
  JWT_ALGORITHM: "HS256"
  JWT_ACCESS_TOKEN_EXPIRE_MINUTES: "30"
  JWT_REFRESH_TOKEN_EXPIRE_DAYS: "7"
  
  # API Keys (to be replaced with actual values from secret manager)
  API_KEY_HEADER: "X-API-Key"
  API_SECRET_KEY: "CHANGE_ME"
  
  # Encryption Keys (to be replaced with actual values from secret manager)
  ENCRYPTION_KEY: "CHANGE_ME"
  ENCRYPTION_ALGORITHM: "AES256"
  
  # External Service Keys (to be replaced with actual values from secret manager)
  EXTERNAL_SERVICE_API_KEY: "CHANGE_ME"
  WEBHOOK_SECRET: "CHANGE_ME"
  
  # Admin Credentials (to be replaced with actual values from secret manager)
  ADMIN_USERNAME: "admin"
  ADMIN_PASSWORD: "CHANGE_ME"
  
  # Monitoring Credentials (to be replaced with actual values from secret manager)
  PROMETHEUS_USERNAME: "prometheus"
  PROMETHEUS_PASSWORD: "CHANGE_ME"
---
apiVersion: v1
kind: Secret
metadata:
  name: isa-superapp-basic-auth
  namespace: isa-superapp
  labels:
    app.kubernetes.io/name: isa-superapp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: auth
type: Opaque
stringData:
  # Basic auth for metrics endpoint (username: prometheus)
  auth: "prometheus:$2y$10$8K1p3kV.dVf6yZY3P7m6Ku8ZcRz7QjG5X9Y8L1N2P4Q6R8S0T2U4V6"  # password: prometheus123
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: isa-superapp-secret-store
  namespace: isa-superapp
  labels:
    app.kubernetes.io/name: isa-superapp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: secret-store
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        jwt:
          serviceAccountRef:
            name: isa-superapp
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: isa-superapp-external-secrets
  namespace: isa-superapp
  labels:
    app.kubernetes.io/name: isa-superapp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: external-secrets
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: isa-superapp-secret-store
    kind: SecretStore
  target:
    name: isa-superapp-secrets
    creationPolicy: Owner
  data:
  - secretKey: DB_HOST
    remoteRef:
      key: isa-superapp/database
      property: host
  - secretKey: DB_PASSWORD
    remoteRef:
      key: isa-superapp/database
      property: password
  - secretKey: REDIS_PASSWORD
    remoteRef:
      key: isa-superapp/redis
      property: password
  - secretKey: JWT_SECRET_KEY
    remoteRef:
      key: isa-superapp/jwt
      property: secret_key
  - secretKey: API_SECRET_KEY
    remoteRef:
      key: isa-superapp/api
      property: secret_key
  - secretKey: ENCRYPTION_KEY
    remoteRef:
      key: isa-superapp/encryption
      property: key
  - secretKey: EXTERNAL_SERVICE_API_KEY
    remoteRef:
      key: isa-superapp/external-services
      property: api_key
  - secretKey: WEBHOOK_SECRET
    remoteRef:
      key: isa-superapp/webhooks
      property: secret
  - secretKey: ADMIN_PASSWORD
    remoteRef:
      key: isa-superapp/admin
      property: password
  - secretKey: PROMETHEUS_PASSWORD
    remoteRef:
      key: isa-superapp/monitoring
      property: prometheus_password
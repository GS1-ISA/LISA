name: Mutation Tests (curated, advisory)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * MON'

jobs:
  mutmut:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install mutmut and deps
        run: |
          python -m pip install --upgrade pip
          pip install mutmut pytest
      - name: Run curated mutation tests (agent_core/orchestrator)
        run: |
          # Keep scope tight for CI time
          mutmut run --paths-to-mutate src/agent_core/agents --tests-dir src/agent_core/tests || true
          mutmut run --paths-to-mutate src/orchestrator/src/orchestrator --tests-dir src/orchestrator/tests || true
      - name: Compute mutation score
        if: always()
        id: score
        run: |
          mutmut results --all > mutmut_results.txt || true
          killed=$(grep -i '^killed' mutmut_results.txt | wc -l | awk '{print $1}')
          survived=$(grep -i '^survived' mutmut_results.txt | wc -l | awk '{print $1}')
          total=$((killed+survived))
          if [ "$total" -eq 0 ]; then score=100; else score=$(( 100 * killed / total )); fi
          echo "killed=$killed" >> $GITHUB_OUTPUT
          echo "survived=$survived" >> $GITHUB_OUTPUT
          echo "score=$score" >> $GITHUB_OUTPUT
          echo "Mutation score: $score% (killed=$killed survived=$survived total=$total)"
      - name: Enforce curated mutation threshold
        env:
          MIN_SCORE: "60"
        run: |
          echo "Threshold: ${MIN_SCORE}%  Actual: ${{ steps.score.outputs.score }}%"
          test ${{ steps.score.outputs.score }} -ge ${MIN_SCORE}
      - name: Upload mutation results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mutmut_results
          path: .mutmut-cache
